{"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_twitter_stream_channels */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/lib.npmtest_twitter_stream_channels.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/lib.npmtest_twitter_stream_channels.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":68}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":74}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_twitter_stream_channels */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_twitter_stream_channels = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_twitter_stream_channels = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":67}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":81},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-twitter-stream-channels && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_twitter_stream_channels */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_twitter_stream_channels","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_twitter_stream_channels.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_twitter_stream_channels.rollup.js'] =","            local.assetsDict['/assets.npmtest_twitter_stream_channels.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_twitter_stream_channels.__dirname + '/lib.npmtest_twitter_stream_channels.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/lib/TwitterStreamChannels.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/lib/TwitterStreamChannels.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":4,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":1},"b":{},"f":{"1":0,"2":4,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":69,"loc":{"start":{"line":69,"column":28},"end":{"line":69,"column":50}}},"2":{"name":"(anonymous_2)","line":79,"loc":{"start":{"line":79,"column":39},"end":{"line":79,"column":49}}},"3":{"name":"(anonymous_3)","line":105,"loc":{"start":{"line":105,"column":48},"end":{"line":105,"column":77}}},"4":{"name":"(anonymous_4)","line":115,"loc":{"start":{"line":115,"column":47},"end":{"line":115,"column":58}}},"5":{"name":"(anonymous_5)","line":131,"loc":{"start":{"line":131,"column":49},"end":{"line":131,"column":67}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":49}},"3":{"start":{"line":69,"column":0},"end":{"line":71,"column":2}},"4":{"start":{"line":70,"column":2},"end":{"line":70,"column":41}},"5":{"start":{"line":79,"column":0},"end":{"line":81,"column":2}},"6":{"start":{"line":80,"column":2},"end":{"line":80,"column":51}},"7":{"start":{"line":105,"column":0},"end":{"line":107,"column":2}},"8":{"start":{"line":106,"column":2},"end":{"line":106,"column":65}},"9":{"start":{"line":115,"column":0},"end":{"line":117,"column":2}},"10":{"start":{"line":116,"column":2},"end":{"line":116,"column":24}},"11":{"start":{"line":131,"column":0},"end":{"line":133,"column":2}},"12":{"start":{"line":132,"column":2},"end":{"line":132,"column":53}},"13":{"start":{"line":135,"column":0},"end":{"line":135,"column":39}}},"branchMap":{},"code":["/**"," * With the Twitter stream API, you can only open one stream at a time. So, if you have multiple filters, the tweets in result will be mixed up, you'll need to do some post-processing."," * "," * This module lets you open multiple channels with there own filters, on the same stream. And then, you can add events to each of them individually, to listen to there results, like if you had open multiple streams."," * "," * twitter-stream-channels handles all the post-processing, the connexion layer (OAuth, etc ...) is handled by [twit](https://github.com/ttezel/twit). See the [FAQ](https://github.com/topheman/twitter-stream-channels#faq) about both topics."," * @module twitter-stream-channels"," * @main twitter-stream-channels"," */","","var twit = require('twit');","var StreamChannels = require('./StreamChannels');","","/**"," * **This is your main point of entry to the whole module**."," * "," * Manage filters on multiple channels on the same Twitter Stream"," * ```js","var TwitterStreamChannels = require('twitter-stream-channels');","var credentials = require('./my.twitter.credentials.json');","","var client = new TwitterStreamChannels(credentials);","","var channels = {","\t\"languages\" : ['javascript','php','java','python','perl'],","\t\"js-frameworks\" : ['angularjs','jquery','backbone','emberjs'],","\t\"web\" : ['javascript','nodejs','html5','css','angularjs']","};","","var stream = client.streamChannels({track:channels});","","stream.on('channels/languages',function(tweet){","    console.log('>languages',tweet.text);//any tweet with 'javascript','php','java','python','perl'","});","","stream.on('channels/js-frameworks',function(tweet){","    console.log('>frameworks',tweet.text);//any tweet with 'angularjs','jquery','backbone','emberjs'","});","","stream.on('channels/web',function(tweet){","    console.log('>web',tweet.text);//any tweet with 'javascript','nodejs','html5','css','angularjs'","});","","//If you want, you can listen on all the channels and pickup the $channels added by the module","//It contains the channel and the keywords picked up in the tweet","//stream.on('channels',function(tweet){","//    console.log(tweet.$channels,tweet.text);//any tweet with any of the keywords above","//});","","//If you're really picky, you can listen to only some keywords","//stream.on('keywords/javascript',function(tweet){","//    console.log(tweet.text);//any tweet with the keyword \"javascript\"","//});","","setTimeout(function(){","    stream.close();//closes the stream connected to Twitter","\tconsole.log('>stream closed after 100 seconds');","},100000);","```"," * @class TwitterStreamChannels"," * @constructor"," * @param {Object} credentials"," * @param {String} credentials.consumer_key"," * @param {String} credentials.consumer_secret"," * @param {String} credentials.access_token"," * @param {String} credentials.access_token_secret"," * @return {TwitterStreamChannels}"," */","var TwitterStreamChannels = function(credentials) {","  this.apiClient = new twit(credentials);","};","","/**"," * Returns a mocked object of TwitterStreamChannels on which you will be able to play your scenarios offline with your own mocked tweets"," * @method getMockedClass"," * @static"," * @return {TwitterStreamChannelsMock}"," */","TwitterStreamChannels.getMockedClass = function(){","  return require('../mocks/TwitterStreamChannels');","};","","/**"," * This will allow you to create your own json data mocks"," * "," * Keep in mind this class is not designed to retrieve lots of tweets on long duration."," * "," * It was only designed to ease the creation of your data mocks to use after with `TwitterStreamChannels.getMockedClass()`"," * "," * More infos in the [README on the github repo](https://github.com/topheman/twitter-stream-channels#api)"," * @method launchMockDataRetriever"," * @static"," * @param {Object} credentials"," * @param {String} credentials.consumer_key"," * @param {String} credentials.consumer_secret"," * @param {String} credentials.access_token"," * @param {String} credentials.access_token_secret"," * @param {Object} options"," * @param {Array} options.track array of keywords to track"," * @param {String} options.output filepath of the json file where to put the retrieved tweets"," * @param {String} [options.maxNumber=200] maximum number of tweets that will be retrieved (default 200 / max 500)"," * @param {String} [options.timeout=100000] maximum delay after the stream will close whatever number of tweets are captured (default 100 000ms)"," * @return {MockDataRetriever}"," */","TwitterStreamChannels.launchMockDataRetriever = function(credentials,options){","  return new require('./MockDataRetriever')(credentials,options);","};","","/**"," * Returns a Twitter API client on which you can do pretty much what you want."," * More here https://github.com/ttezel/twit"," * @method getApiClient"," * @returns {twit}"," */","TwitterStreamChannels.prototype.getApiClient = function() {","  return this.apiClient;","};","","/**"," * Opens a Twitter Stream and returns you an other one on which you'll be able to attach events for each channels"," * @method streamChannels"," * @param {Object} options You can use the same filter options as described in the Twitter stream API for `statuses/filter` https://dev.twitter.com/docs/api/1.1/post/statuses/filter"," * @param {Object|Array} options.track Pass an object describing your channels. If you don't want to use channels, you can pass directly an array of keywords."," * @param {String} [options.follow] A comma separated list of user IDs, indicating the users to return statuses for in the stream"," * @param {String} [options.locations] Specifies a set of bounding boxes to track. More about how to format this parameter here : https://dev.twitter.com/docs/streaming-apis/parameters#locations"," * @param {Boolean} [options.enableChannelsEvents=true] If true, will fire the events like 'channels/channelName'"," * @param {Boolean} [options.enableRootChannelsEvent=true] If true, will fire the event 'channels'"," * @param {Boolean} [options.enableKeywordsEvents=false] If true, will fire the events 'keywords/keywordName' (disabled by default)"," * @return {StreamChannels}"," */","TwitterStreamChannels.prototype.streamChannels = function(options) {","  return new StreamChannels(this.apiClient, options);","};","","module.exports = TwitterStreamChannels;"],"l":{"11":1,"12":1,"69":1,"70":0,"79":1,"80":4,"105":1,"106":0,"115":1,"116":0,"131":1,"132":0,"135":1}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/lib/StreamChannels.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/lib/StreamChannels.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1,"49":0,"50":1,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":21},"end":{"line":25,"column":50}}},"2":{"name":"(anonymous_2)","line":60,"loc":{"start":{"line":60,"column":16},"end":{"line":60,"column":55}}},"3":{"name":"(anonymous_3)","line":63,"loc":{"start":{"line":63,"column":5},"end":{"line":63,"column":24}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":33},"end":{"line":64,"column":46}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":27},"end":{"line":69,"column":40}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":19},"end":{"line":85,"column":67}}},"7":{"name":"(anonymous_7)","line":99,"loc":{"start":{"line":99,"column":56},"end":{"line":99,"column":73}}},"8":{"name":"(anonymous_8)","line":120,"loc":{"start":{"line":120,"column":33},"end":{"line":120,"column":44}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":32},"end":{"line":132,"column":50}}},"10":{"name":"(anonymous_10)","line":145,"loc":{"start":{"line":145,"column":39},"end":{"line":145,"column":50}}},"11":{"name":"(anonymous_11)","line":154,"loc":{"start":{"line":154,"column":46},"end":{"line":154,"column":57}}},"12":{"name":"(anonymous_12)","line":163,"loc":{"start":{"line":163,"column":63},"end":{"line":163,"column":74}}},"13":{"name":"(anonymous_13)","line":192,"loc":{"start":{"line":192,"column":30},"end":{"line":192,"column":48}}},"14":{"name":"(anonymous_14)","line":211,"loc":{"start":{"line":211,"column":22},"end":{"line":211,"column":56}}},"15":{"name":"(anonymous_15)","line":226,"loc":{"start":{"line":226,"column":96},"end":{"line":226,"column":110}}},"16":{"name":"(anonymous_16)","line":229,"loc":{"start":{"line":229,"column":124},"end":{"line":229,"column":138}}},"17":{"name":"(anonymous_17)","line":233,"loc":{"start":{"line":233,"column":47},"end":{"line":233,"column":61}}},"18":{"name":"keywordsToArray","line":245,"loc":{"start":{"line":245,"column":4},"end":{"line":245,"column":47}}},"19":{"name":"(anonymous_19)","line":267,"loc":{"start":{"line":267,"column":20},"end":{"line":267,"column":50}}},"20":{"name":"(anonymous_20)","line":319,"loc":{"start":{"line":319,"column":25},"end":{"line":319,"column":55}}},"21":{"name":"(anonymous_21)","line":348,"loc":{"start":{"line":348,"column":16},"end":{"line":348,"column":47}}},"22":{"name":"(anonymous_22)","line":361,"loc":{"start":{"line":361,"column":19},"end":{"line":361,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":5,"column":31}},"2":{"start":{"line":25,"column":0},"end":{"line":35,"column":2}},"3":{"start":{"line":26,"column":2},"end":{"line":26,"column":52}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":123}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":132}},"6":{"start":{"line":29,"column":2},"end":{"line":29,"column":124}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":44}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":102}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":26}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":38}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":25}},"12":{"start":{"line":37,"column":0},"end":{"line":37,"column":44}},"13":{"start":{"line":40,"column":0},"end":{"line":46,"column":2}},"14":{"start":{"line":60,"column":0},"end":{"line":73,"column":2}},"15":{"start":{"line":62,"column":2},"end":{"line":68,"column":3}},"16":{"start":{"line":63,"column":4},"end":{"line":67,"column":35}},"17":{"start":{"line":64,"column":6},"end":{"line":66,"column":9}},"18":{"start":{"line":65,"column":8},"end":{"line":65,"column":44}},"19":{"start":{"line":69,"column":2},"end":{"line":71,"column":5}},"20":{"start":{"line":70,"column":4},"end":{"line":70,"column":46}},"21":{"start":{"line":72,"column":2},"end":{"line":72,"column":24}},"22":{"start":{"line":85,"column":0},"end":{"line":90,"column":2}},"23":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"24":{"start":{"line":87,"column":4},"end":{"line":87,"column":40}},"25":{"start":{"line":89,"column":2},"end":{"line":89,"column":24}},"26":{"start":{"line":99,"column":0},"end":{"line":111,"column":2}},"27":{"start":{"line":100,"column":2},"end":{"line":100,"column":18}},"28":{"start":{"line":101,"column":2},"end":{"line":101,"column":101}},"29":{"start":{"line":102,"column":2},"end":{"line":108,"column":3}},"30":{"start":{"line":103,"column":4},"end":{"line":107,"column":5}},"31":{"start":{"line":104,"column":6},"end":{"line":106,"column":7}},"32":{"start":{"line":105,"column":8},"end":{"line":105,"column":35}},"33":{"start":{"line":109,"column":2},"end":{"line":109,"column":38}},"34":{"start":{"line":110,"column":2},"end":{"line":110,"column":16}},"35":{"start":{"line":120,"column":0},"end":{"line":123,"column":2}},"36":{"start":{"line":121,"column":2},"end":{"line":121,"column":29}},"37":{"start":{"line":122,"column":2},"end":{"line":122,"column":14}},"38":{"start":{"line":132,"column":0},"end":{"line":138,"column":2}},"39":{"start":{"line":133,"column":2},"end":{"line":133,"column":58}},"40":{"start":{"line":134,"column":2},"end":{"line":134,"column":118}},"41":{"start":{"line":135,"column":2},"end":{"line":135,"column":28}},"42":{"start":{"line":136,"column":2},"end":{"line":136,"column":50}},"43":{"start":{"line":137,"column":2},"end":{"line":137,"column":14}},"44":{"start":{"line":145,"column":0},"end":{"line":147,"column":2}},"45":{"start":{"line":146,"column":2},"end":{"line":146,"column":23}},"46":{"start":{"line":154,"column":0},"end":{"line":156,"column":2}},"47":{"start":{"line":155,"column":2},"end":{"line":155,"column":30}},"48":{"start":{"line":163,"column":0},"end":{"line":165,"column":2}},"49":{"start":{"line":164,"column":2},"end":{"line":164,"column":47}},"50":{"start":{"line":176,"column":0},"end":{"line":176,"column":32}},"51":{"start":{"line":183,"column":0},"end":{"line":352,"column":2}},"52":{"start":{"line":193,"column":4},"end":{"line":201,"column":5}},"53":{"start":{"line":194,"column":6},"end":{"line":194,"column":81}},"54":{"start":{"line":196,"column":9},"end":{"line":201,"column":5}},"55":{"start":{"line":197,"column":6},"end":{"line":197,"column":87}},"56":{"start":{"line":199,"column":9},"end":{"line":201,"column":5}},"57":{"start":{"line":200,"column":6},"end":{"line":200,"column":204}},"58":{"start":{"line":212,"column":4},"end":{"line":212,"column":40}},"59":{"start":{"line":213,"column":4},"end":{"line":213,"column":33}},"60":{"start":{"line":214,"column":4},"end":{"line":214,"column":51}},"61":{"start":{"line":215,"column":4},"end":{"line":215,"column":61}},"62":{"start":{"line":216,"column":4},"end":{"line":216,"column":57}},"63":{"start":{"line":218,"column":4},"end":{"line":222,"column":5}},"64":{"start":{"line":219,"column":6},"end":{"line":221,"column":8}},"65":{"start":{"line":224,"column":4},"end":{"line":238,"column":5}},"66":{"start":{"line":225,"column":6},"end":{"line":225,"column":85}},"67":{"start":{"line":226,"column":6},"end":{"line":228,"column":9}},"68":{"start":{"line":227,"column":8},"end":{"line":227,"column":34}},"69":{"start":{"line":229,"column":6},"end":{"line":231,"column":9}},"70":{"start":{"line":230,"column":8},"end":{"line":230,"column":34}},"71":{"start":{"line":232,"column":6},"end":{"line":232,"column":223}},"72":{"start":{"line":233,"column":6},"end":{"line":237,"column":9}},"73":{"start":{"line":234,"column":8},"end":{"line":236,"column":9}},"74":{"start":{"line":235,"column":10},"end":{"line":235,"column":52}},"75":{"start":{"line":245,"column":4},"end":{"line":257,"column":5}},"76":{"start":{"line":246,"column":6},"end":{"line":255,"column":7}},"77":{"start":{"line":247,"column":8},"end":{"line":247,"column":52}},"78":{"start":{"line":249,"column":11},"end":{"line":255,"column":7}},"79":{"start":{"line":250,"column":8},"end":{"line":254,"column":9}},"80":{"start":{"line":251,"column":10},"end":{"line":253,"column":11}},"81":{"start":{"line":252,"column":12},"end":{"line":252,"column":58}},"82":{"start":{"line":256,"column":6},"end":{"line":256,"column":20}},"83":{"start":{"line":259,"column":4},"end":{"line":259,"column":26}},"84":{"start":{"line":268,"column":4},"end":{"line":268,"column":25}},"85":{"start":{"line":269,"column":4},"end":{"line":269,"column":25}},"86":{"start":{"line":270,"column":4},"end":{"line":270,"column":14}},"87":{"start":{"line":271,"column":4},"end":{"line":271,"column":30}},"88":{"start":{"line":272,"column":4},"end":{"line":272,"column":40}},"89":{"start":{"line":275,"column":4},"end":{"line":275,"column":52}},"90":{"start":{"line":276,"column":4},"end":{"line":278,"column":5}},"91":{"start":{"line":277,"column":6},"end":{"line":277,"column":66}},"92":{"start":{"line":279,"column":4},"end":{"line":288,"column":5}},"93":{"start":{"line":280,"column":6},"end":{"line":287,"column":7}},"94":{"start":{"line":281,"column":8},"end":{"line":283,"column":9}},"95":{"start":{"line":282,"column":10},"end":{"line":282,"column":82}},"96":{"start":{"line":284,"column":8},"end":{"line":286,"column":9}},"97":{"start":{"line":285,"column":10},"end":{"line":285,"column":83}},"98":{"start":{"line":291,"column":4},"end":{"line":310,"column":5}},"99":{"start":{"line":292,"column":6},"end":{"line":292,"column":25}},"100":{"start":{"line":293,"column":6},"end":{"line":298,"column":7}},"101":{"start":{"line":294,"column":8},"end":{"line":294,"column":106}},"102":{"start":{"line":295,"column":8},"end":{"line":297,"column":9}},"103":{"start":{"line":296,"column":10},"end":{"line":296,"column":60}},"104":{"start":{"line":299,"column":6},"end":{"line":309,"column":7}},"105":{"start":{"line":300,"column":8},"end":{"line":300,"column":38}},"106":{"start":{"line":301,"column":8},"end":{"line":308,"column":9}},"107":{"start":{"line":302,"column":10},"end":{"line":304,"column":11}},"108":{"start":{"line":303,"column":12},"end":{"line":303,"column":60}},"109":{"start":{"line":305,"column":10},"end":{"line":307,"column":11}},"110":{"start":{"line":306,"column":12},"end":{"line":306,"column":51}},"111":{"start":{"line":311,"column":4},"end":{"line":311,"column":26}},"112":{"start":{"line":320,"column":4},"end":{"line":320,"column":25}},"113":{"start":{"line":321,"column":4},"end":{"line":323,"column":5}},"114":{"start":{"line":322,"column":6},"end":{"line":322,"column":45}},"115":{"start":{"line":324,"column":4},"end":{"line":328,"column":5}},"116":{"start":{"line":325,"column":6},"end":{"line":327,"column":7}},"117":{"start":{"line":326,"column":8},"end":{"line":326,"column":56}},"118":{"start":{"line":329,"column":4},"end":{"line":337,"column":5}},"119":{"start":{"line":330,"column":6},"end":{"line":336,"column":7}},"120":{"start":{"line":331,"column":8},"end":{"line":335,"column":9}},"121":{"start":{"line":332,"column":10},"end":{"line":334,"column":11}},"122":{"start":{"line":333,"column":12},"end":{"line":333,"column":80}},"123":{"start":{"line":338,"column":4},"end":{"line":338,"column":26}},"124":{"start":{"line":349,"column":4},"end":{"line":349,"column":52}},"125":{"start":{"line":350,"column":4},"end":{"line":350,"column":64}},"126":{"start":{"line":361,"column":0},"end":{"line":364,"column":2}},"127":{"start":{"line":362,"column":2},"end":{"line":363,"column":32}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":87},"end":{"line":27,"column":91}},{"start":{"line":27,"column":94},"end":{"line":27,"column":122}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":93},"end":{"line":28,"column":97}},{"start":{"line":28,"column":100},"end":{"line":28,"column":131}}]},"3":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":87},"end":{"line":29,"column":92}},{"start":{"line":29,"column":95},"end":{"line":29,"column":123}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"5":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"6":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"7":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":45},"end":{"line":133,"column":47}},{"start":{"line":133,"column":50},"end":{"line":133,"column":57}}]},"8":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":83},"end":{"line":134,"column":88}},{"start":{"line":134,"column":91},"end":{"line":134,"column":117}}]},"9":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"10":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":9},"end":{"line":196,"column":9}},{"start":{"line":196,"column":9},"end":{"line":196,"column":9}}]},"11":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":9},"end":{"line":199,"column":9}},{"start":{"line":199,"column":9},"end":{"line":199,"column":9}}]},"12":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":15},"end":{"line":199,"column":48}},{"start":{"line":199,"column":52},"end":{"line":199,"column":85}}]},"13":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"14":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":38}},{"start":{"line":218,"column":42},"end":{"line":218,"column":75}}]},"15":{"line":232,"type":"cond-expr","locations":[{"start":{"line":232,"column":129},"end":{"line":232,"column":215}},{"start":{"line":232,"column":218},"end":{"line":232,"column":222}}]},"16":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":234,"column":8}},{"start":{"line":234,"column":8},"end":{"line":234,"column":8}}]},"17":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":6}},{"start":{"line":246,"column":6},"end":{"line":246,"column":6}}]},"18":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":11},"end":{"line":249,"column":11}},{"start":{"line":249,"column":11},"end":{"line":249,"column":11}}]},"19":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":8},"end":{"line":250,"column":8}},{"start":{"line":250,"column":8},"end":{"line":250,"column":8}}]},"20":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"21":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":7},"end":{"line":276,"column":17}},{"start":{"line":276,"column":21},"end":{"line":276,"column":43}}]},"22":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"23":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":7},"end":{"line":279,"column":21}},{"start":{"line":279,"column":25},"end":{"line":279,"column":44}},{"start":{"line":279,"column":48},"end":{"line":279,"column":78}}]},"24":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":8},"end":{"line":281,"column":8}},{"start":{"line":281,"column":8},"end":{"line":281,"column":8}}]},"25":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":8},"end":{"line":284,"column":8}},{"start":{"line":284,"column":8},"end":{"line":284,"column":8}}]},"26":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":8},"end":{"line":295,"column":8}},{"start":{"line":295,"column":8},"end":{"line":295,"column":8}}]},"27":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":6},"end":{"line":299,"column":6}},{"start":{"line":299,"column":6},"end":{"line":299,"column":6}}]},"28":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":10},"end":{"line":302,"column":10}},{"start":{"line":302,"column":10},"end":{"line":302,"column":10}}]},"29":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":10},"end":{"line":305,"column":10}},{"start":{"line":305,"column":10},"end":{"line":305,"column":10}}]},"30":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"31":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"32":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":4},"end":{"line":329,"column":4}},{"start":{"line":329,"column":4},"end":{"line":329,"column":4}}]},"33":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":8},"end":{"line":331,"column":8}},{"start":{"line":331,"column":8},"end":{"line":331,"column":8}}]}},"code":["/**"," * @module twitter-stream-channels"," */","var EventEmitter = require('events').EventEmitter,","        util = require('util');","","/**"," * The constructor itself of this class is private, you should open a StreamChannels via {{#crossLink \"TwitterStreamChannels/streamChannels\"}}TwitterStreamChannels.streamChannels(options){{/crossLink}} "," * "," * Check out the available events in the [README on the github repo](https://github.com/topheman/twitter-stream-channels#faq)."," * @class StreamChannels"," * @constructor"," * @private"," * @extends events.EventEmitter"," * @param {twit} apiClient"," * @param {Object} options You can use the same filter options as described in the Twitter stream API for `statuses/filter` https://dev.twitter.com/docs/api/1.1/post/statuses/filter"," * @param {Object|Array} options.track Pass an object describing your channels. If you don't want to use channels, you can pass directly an array of keywords."," * @param {String} [options.follow] A comma separated list of user IDs, indicating the users to return statuses for in the stream"," * @param {String} [options.locations] Specifies a set of bounding boxes to track. More about how to format this parameter here : https://dev.twitter.com/docs/streaming-apis/parameters#locations"," * @param {Boolean} [options.enableChannelsEvents=true] If true, will fire the events like 'channels/channelName'"," * @param {Boolean} [options.enableRootChannelsEvent=true] If true, will fire the event 'channels'"," * @param {Boolean} [options.enableKeywordsEvents=false] If true, will fire the events 'keywords/keywordName' (disabled by default)"," * @returns {StreamChannels}"," */","var StreamChannels = function(apiClient, options) {","  helpers.checkStreamChannelsOptions(options, this);","  options.enableChannelsEvents = typeof options.enableChannelsEvents === 'undefined' ? true : options.enableChannelsEvents;","  options.enableRootChannelsEvent = typeof options.enableRootChannelsEvent === 'undefined' ? true : options.enableRootChannelsEvent;","  options.enableKeywordsEvents = typeof options.enableKeywordsEvents === 'undefined' ? false : options.enableKeywordsEvents;","  helpers.preprocessKeywords(options, this);","  this.currentStream = apiClient.stream('statuses/filter',this._getOptionsToPassToApiClient(options));","  EventEmitter.call(this);","  addEvents(this.currentStream, this);","  this.options = options;","};","","util.inherits(StreamChannels, EventEmitter);","","","var defaultEventsToTransmit = [","  'connect',","  'connected',","  'disconnect',","  'reconnect',","  'warning'","];","","/**"," * Adds the events (specifics and propagated from twitter API client), according to options"," * @function addGenericEvents"," * @private"," * @param {twit} twitterStream"," * @param {StreamChannels} streamChannels"," * @param {Object} [options]"," * @param {Boolean} [options.enableChannelsEvents=true] If true, will fire the events like 'channels/channelName'"," * @param {Boolean} [options.enableRootChannelsEvent=true] If true, will fire the event 'channels'"," * @param {Boolean} [options.enableKeywordsEvents=false] If true, will fire the events 'keywords/keywordName' (disabled by default)"," * @returns {streamChannels}"," */","var addEvents = function(twitterStream, streamChannels){","  //transmit events","  for(var i=0; i<defaultEventsToTransmit.length; i++){","    (function(eventName){","      twitterStream.on(eventName,function(msg){","        streamChannels.emit(eventName, msg);","      });","    })(defaultEventsToTransmit[i]);","  }","  twitterStream.on('tweet',function(msg){","    helpers.onTweetEvent(msg, streamChannels);","  });","  return streamChannels;","};","","/**"," * Removes the events (specifics and propagated from twitter API client), according to options"," * @function removeEvents"," * @private"," * @param {twit} twitterStream"," * @param {StreamChannels} streamChannels"," * @param {Object} [options]"," * @param {Object} [options.removeAllListeners=false] If true removes all the listeners set on the stream"," * @returns {streamChannels}"," */","var removeEvents = function(twitterStream, streamChannels, options){","  if(options.removeAllListeners === true){","    streamChannels.removeAllListeners();","  }","  return streamChannels;  ","};","","/**"," * Formats options passed with non-duplicate tracked keywords"," * @method _getOptionsToPassToApiClient"," * @private"," * @param {Object} options"," * @returns {Object}"," */","StreamChannels.prototype._getOptionsToPassToApiClient = function(options){","  var result = {};","  var dontHandle = ['track','enableChannelsEvents','enableRootChannelsEvent','enableKeywordsEvents'];","  if(typeof options !== 'undefined'){","    for(var key in options){","      if(dontHandle.indexOf(key) === -1){","        result[key] = options[key];","      }","    }","  }","  result.track = this.trackedKeywords;","  return result;","};","","/**"," * Call this function to restart the stream after you called `.stop()` on it."," * "," * Note: there is no need to call `.start()` to begin streaming. ` TwitterStreamChannels.streamChannels` calls .start() for you."," * @method start"," * @returns {StreamChannels}"," */","StreamChannels.prototype.start = function() {","  this.currentStream.start();","  return this;","};","","/**"," * Closes the opened stream with Twitter"," * @method stop"," * @param {Object} [options]"," * @param {Object} [options.removeAllListeners=false] If true removes all the listeners set on the stream"," * @returns {StreamChannels}"," */","StreamChannels.prototype.stop = function(options) {","  options = typeof options === 'undefined' ? {} : options;","  options.removeAllListeners = typeof options.removeAllListeners === 'undefined' ? false : options.removeAllListeners;","  this.currentStream.stop();","  removeEvents(this.currentStream, this, options);","  return this;","};","","/**"," * Returns your channel description"," * @method getChannels"," * @returns {StreamChannels.channels}"," */","StreamChannels.prototype.getChannels = function() {","  return this.channels;","};","","/**"," * Returns an array of the keywords you're tracking (duplicates were removed)"," * @method getTrackedKeywords"," * @returns {Array}"," */","StreamChannels.prototype.getTrackedKeywords = function() {","  return this.trackedKeywords;","};","","/**"," * Returns an object key/value - key:your channels - value:the full text search RegExp for the keywords of this channel"," * @method getchannelsKeywordsLowerCasedRegExp"," * @returns {StreamChannels.channels}"," */","StreamChannels.prototype.getChannelsKeywordsLowerCasedRegExp = function() {","  return this.channelsKeywordsLowerCasedRegExp;","};","","/**"," * Removes all the listeners added"," * "," * See more methods http://nodejs.org/api/events.html#events_events"," * @method removeAllListeners"," * @param {String} event"," * @returns {StreamChannels}"," */","","module.exports = StreamChannels;","","/*"," * This class is private to the StreamChannels class, it's not exposed"," * @private"," * @class StreamChannels.helpers"," */","var helpers = {","  /*","   * Checks the options parameter for consistency and mandatory parameters","   * @method checkStreamChannelsOptions","   * @private","   * @throws {Error}","   * @param {Object} options","   * @returns {undefined}","   */","  checkStreamChannelsOptions: function(options) {","    if (typeof options === 'undefined') {","      throw new Error('new StreamChannels(options) - options parameter missing');","    }","    else if (typeof options.track === 'undefined') {","      throw new Error('new StreamChannels(options) - options.track parameter missing');","    }","    else if (!(typeof options.track === 'object' || typeof options.track === 'string')) {","      throw new Error('new StreamChannels(options) - options.track must be an Object (representing your channels with there keywords), an Array (of keywords) or a String (with comma separeted keywords)');","    }","  },","  /*","   * Prepares the channels and keywords to be processed later","   * @method preprocessKeywords","   * @private","   * @param {type} options","   * @param {type} streamChannels","   * @returns {StreamChannels}","   */","  preprocessKeywords: function(options, streamChannels) {","    streamChannels.trackedKeywords = [];","    streamChannels.channels = {};","    streamChannels.channelsKeywordsLowerCased = {};","    streamChannels.channelsKeywordsLowerCasedRegExpSafe = {};","    streamChannels.channelsKeywordsLowerCasedRegExp = {};","","    if (options.track instanceof Array || typeof options.track === 'string') {","      options.track = {","        \"default\": options.track","      };","    }","","    for (var channel in options.track) {","      streamChannels.channels[channel] = keywordsToArray(options.track[channel], []);//process the options.track[channel] to make sure it will be an array of keywords","      streamChannels.channelsKeywordsLowerCased[channel] = streamChannels.channels[channel].map(function(item){","        return item.toLowerCase();","      });","      streamChannels.channelsKeywordsLowerCasedRegExpSafe[channel] = streamChannels.channelsKeywordsLowerCased[channel].map(function(item){","        return regExpEscape(item);//escape the lower cased keywords so they will be regexp proof","      });","      streamChannels.channelsKeywordsLowerCasedRegExp[channel] = streamChannels.channelsKeywordsLowerCased[channel].length > 0 ? new RegExp(streamChannels.channelsKeywordsLowerCasedRegExpSafe[channel].join('|'),'g') : null;//create the full text search regexp on lower cased keywords","      streamChannels.channels[channel].forEach(function(item){","        if(streamChannels.trackedKeywords.indexOf(item) === -1){","          streamChannels.trackedKeywords.push(item);","        }","      });","    }","","    /*","     * Prepares keywords to an array of keywords like 'foo,bar' -> ['foo','bar'] also ['foo,bar','toto'] -> ['foo','bar','toto'] also 'foo,bar,toto' -> ['foo','bar','toto']","     * @param {Array|String} keywords","     * @returns {Array}","     */","    function keywordsToArray(keywords, result) {","      if (typeof keywords === 'string') {","        result = result.concat(keywords.split(','));","      }","      else if (keywords instanceof Array) {","        if (keywords.length > 0) {","          for (var i = 0; i < keywords.length; i++) {","            result = keywordsToArray(keywords[i], result);","          }","        }","      }","      return result;","    }","","    return streamChannels;","  },","  /*","   * Tags $channels with an array of lower cased keywords found in it","   * @param {Object} tweet The tweet to postprocess","   * @param {StreamChannels} streamChannels The StreamChannels object we're on, to know which keywords and channels to process","   * @returns {StreamChannels} tweetInfos Containing two arrays : channels and keywords found in the tweet","   */ ","  postprocessTweet: function(tweet,streamChannels){","    tweet.$channels = {};","    tweet.$keywords = [];","    var i,j,k;","    var lowerCasedSearch = [];","    var keywordsFound = [], tmpKeywords;","    ","    //prepare the lowerCased strings to full text search in the tweet object","    lowerCasedSearch.push(tweet.text.toLowerCase());","    if(tweet.user && tweet.user.screen_name){","      lowerCasedSearch.push(tweet.user.screen_name.toLowerCase());","    }","    if(tweet.entities && tweet.entities.urls && tweet.entities.urls.length > 0){","      for(i=0; i<tweet.entities.urls.length; i++){","        if(tweet.entities.urls[i].display_url){","          lowerCasedSearch.push(tweet.entities.urls[i].display_url.toLowerCase());","        }","        if(tweet.entities.urls[i].expanded_url){","          lowerCasedSearch.push(tweet.entities.urls[i].expanded_url.toLowerCase());","        }","      }","    }","    ","    //find the keywords","    for(var channel in streamChannels.channelsKeywordsLowerCasedRegExp){","      keywordsFound = [];","      for(j=0; j<lowerCasedSearch.length; j++){","        tmpKeywords = lowerCasedSearch[j].match(streamChannels.channelsKeywordsLowerCasedRegExp[channel]);","        if(tmpKeywords !== null){","          keywordsFound = keywordsFound.concat(tmpKeywords);","        }","      }","      if(keywordsFound.length > 0){","        tweet.$channels[channel] = [];","        for(k=0; k<keywordsFound.length; k++){","          if(tweet.$channels[channel].indexOf(keywordsFound[k]) === -1){","            tweet.$channels[channel].push(keywordsFound[k]);","          }","          if(tweet.$keywords.indexOf(keywordsFound[k]) === -1){","            tweet.$keywords.push(keywordsFound[k]);","          }","        }","      }","    }","    return streamChannels;","  },","  /*","   * Emits the tweet on the right events (according to the options passed by the user)","   * @param {Object} tweet postprocessed tweet","   * @param {type} streamChannels The StreamChannels object we're on, to emit from","   * @returns {StreamChannels} returns the streamChannels object","   */","  emitPosprocessedTweet: function(tweet,streamChannels){","    var channel, keyword;","    if(streamChannels.options.enableRootChannelsEvent === true){","      streamChannels.emit('channels', tweet);","    }","    if(streamChannels.options.enableChannelsEvents === true){","      for(channel in tweet.$channels){","        streamChannels.emit('channels/'+channel, tweet);","      }","    }","    if(streamChannels.options.enableKeywordsEvents === true){","      for(channel in tweet.$channels){","        if(tweet.$channels[channel].length > 0){","          for(var i=0; i<tweet.$channels[channel].length; i++){","            streamChannels.emit('keywords/'+tweet.$channels[channel][i], tweet);","          }","        }","      }","    }","    return streamChannels;","  },","  /*","   * To execute when a tweet is received :","   * - to posprocess the tweet","   * - then emit the postprocessed tweet on the proper events","   * @param {Object} tweet","   * @param {StreamChannels} streamChannels","   * @returns {StreamChannels}","   */","  onTweetEvent: function(tweet, streamChannels){","    helpers.postprocessTweet(tweet, streamChannels);","    return helpers.emitPosprocessedTweet(tweet, streamChannels);","  }","};","","/**"," * From http://docs.closure-library.googlecode.com/git/local_closure_goog_string_string.js.source.html#line1015"," * Escapes characters in the string that are not safe to use in a RegExp."," * @param {*} s The string to escape. If not a string, it will be casted"," *     to one."," * @return {string} A RegExp safe, escaped copy of {@code s}."," */","var regExpEscape = function(s) {","  return String(s).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').","      replace(/\\x08/g, '\\\\x08');","};"],"l":{"4":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"37":1,"40":1,"60":1,"62":0,"63":0,"64":0,"65":0,"69":0,"70":0,"72":0,"85":1,"86":0,"87":0,"89":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"109":0,"110":0,"120":1,"121":0,"122":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"145":1,"146":0,"154":1,"155":0,"163":1,"164":0,"176":1,"183":1,"193":0,"194":0,"196":0,"197":0,"199":0,"200":0,"212":0,"213":0,"214":0,"215":0,"216":0,"218":0,"219":0,"224":0,"225":0,"226":0,"227":0,"229":0,"230":0,"232":0,"233":0,"234":0,"235":0,"245":1,"246":0,"247":0,"249":0,"250":0,"251":0,"252":0,"256":0,"259":0,"268":0,"269":0,"270":0,"271":0,"272":0,"275":0,"276":0,"277":0,"279":0,"280":0,"281":0,"282":0,"284":0,"285":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"299":0,"300":0,"301":0,"302":0,"303":0,"305":0,"306":0,"311":0,"320":0,"321":0,"322":0,"324":0,"325":0,"326":0,"329":0,"330":0,"331":0,"332":0,"333":0,"338":0,"349":0,"350":0,"361":1,"362":0}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/main.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/main.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}}},"branchMap":{},"code":["module.exports = require('./lib/TwitterStreamChannels');"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/lib/MockDataRetriever.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/lib/MockDataRetriever.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":24},"end":{"line":33,"column":53}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":14},"end":{"line":64,"column":25}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":41},"end":{"line":70,"column":59}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":23},"end":{"line":84,"column":34}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":25},"end":{"line":88,"column":36}}},"6":{"name":"(anonymous_6)","line":92,"loc":{"start":{"line":92,"column":26},"end":{"line":92,"column":37}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":21},"end":{"line":96,"column":37}}},"8":{"name":"(anonymous_8)","line":106,"loc":{"start":{"line":106,"column":13},"end":{"line":106,"column":24}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":23}},"3":{"start":{"line":33,"column":0},"end":{"line":110,"column":2}},"4":{"start":{"line":34,"column":2},"end":{"line":36,"column":3}},"5":{"start":{"line":35,"column":4},"end":{"line":35,"column":54}},"6":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"7":{"start":{"line":38,"column":4},"end":{"line":38,"column":60}},"8":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":76}},"10":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":61}},"12":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":28}},"14":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"15":{"start":{"line":50,"column":4},"end":{"line":50,"column":28}},"16":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":29}},"18":{"start":{"line":56,"column":2},"end":{"line":56,"column":24}},"19":{"start":{"line":58,"column":2},"end":{"line":58,"column":37}},"20":{"start":{"line":60,"column":2},"end":{"line":60,"column":18}},"21":{"start":{"line":62,"column":2},"end":{"line":62,"column":72}},"22":{"start":{"line":64,"column":2},"end":{"line":82,"column":4}},"23":{"start":{"line":65,"column":4},"end":{"line":65,"column":18}},"24":{"start":{"line":66,"column":4},"end":{"line":66,"column":20}},"25":{"start":{"line":67,"column":4},"end":{"line":67,"column":129}},"26":{"start":{"line":68,"column":4},"end":{"line":81,"column":5}},"27":{"start":{"line":69,"column":4},"end":{"line":69,"column":36}},"28":{"start":{"line":70,"column":6},"end":{"line":76,"column":9}},"29":{"start":{"line":71,"column":8},"end":{"line":71,"column":78}},"30":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"31":{"start":{"line":73,"column":10},"end":{"line":73,"column":75}},"32":{"start":{"line":75,"column":8},"end":{"line":75,"column":23}},"33":{"start":{"line":79,"column":6},"end":{"line":79,"column":86}},"34":{"start":{"line":80,"column":6},"end":{"line":80,"column":21}},"35":{"start":{"line":84,"column":2},"end":{"line":86,"column":5}},"36":{"start":{"line":85,"column":4},"end":{"line":85,"column":43}},"37":{"start":{"line":88,"column":2},"end":{"line":90,"column":5}},"38":{"start":{"line":89,"column":4},"end":{"line":89,"column":136}},"39":{"start":{"line":92,"column":2},"end":{"line":94,"column":5}},"40":{"start":{"line":93,"column":4},"end":{"line":93,"column":62}},"41":{"start":{"line":96,"column":2},"end":{"line":104,"column":5}},"42":{"start":{"line":97,"column":4},"end":{"line":97,"column":23}},"43":{"start":{"line":98,"column":4},"end":{"line":98,"column":31}},"44":{"start":{"line":99,"column":4},"end":{"line":99,"column":31}},"45":{"start":{"line":100,"column":4},"end":{"line":100,"column":60}},"46":{"start":{"line":101,"column":4},"end":{"line":103,"column":5}},"47":{"start":{"line":102,"column":6},"end":{"line":102,"column":14}},"48":{"start":{"line":106,"column":2},"end":{"line":108,"column":22}},"49":{"start":{"line":107,"column":4},"end":{"line":107,"column":12}},"50":{"start":{"line":112,"column":0},"end":{"line":112,"column":35}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":2},"end":{"line":40,"column":2}},{"start":{"line":40,"column":2},"end":{"line":40,"column":2}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"8":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":5},"end":{"line":52,"column":43}},{"start":{"line":52,"column":47},"end":{"line":52,"column":71}}]},"9":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"10":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"11":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]}},"code":["/**"," * @module twitter-stream-channels"," */","","var twit = require('twit');","var fs = require('fs');","","/**"," * This contructor is private, you should access it via {{#crossLink \"TwitterStreamChannels/launchMockDataRetriever\"}}TwitterStreamChannels.launchMockDataRetriever(credentials,options){{/crossLink}}"," * "," * This will allow you to create your own json data mocks"," * "," * Keep in mind this class is not designed to retrieve lots of tweets on long duration."," * "," * It was only designed to ease the creation of your data mocks to use after with `TwitterStreamChannels.getMockedClass()`"," * "," * More infos in the [README on the github repo](https://github.com/topheman/twitter-stream-channels#api)"," * @class MockDataRetriever"," * @constructor"," * @private"," * @param {Object} credentials"," * @param {String} credentials.consumer_key"," * @param {String} credentials.consumer_secret"," * @param {String} credentials.access_token"," * @param {String} credentials.access_token_secret"," * @param {Object} options"," * @param {Array} options.track array of keywords to track"," * @param {String} options.output filepath of the json file where to put the retrieved tweets"," * @param {String} [options.maxNumber=200] maximum number of tweets that will be retrieved (default 200 / max 500)"," * @param {String} [options.timeout=100000] maximum delay after the stream will close whatever number of tweets are captured (default 100 000ms)"," * @return {MockDataRetriever}"," */","var MockDataRetriever = function(credentials,options){","  if(typeof options === 'undefined'){","    throw new Error(\"options parameter is mandatory\");","  }","  if(typeof options.track === 'undefined'){","    throw new Error(\"options.track parameter is mandatory\");","  }","  if(options.track instanceof Array !== true){","    throw new Error(\"options.track parameter must be an array of keywords\");","  }","  if(options.output === 'undefined'){","    throw new Error(\"options.output parameter is mandatory\");","  }","  if(typeof options.maxNumber === 'undefined'){","    options.maxNumber = 200;","  }","  if(options.maxNumber > 500){","    options.maxNumber = 500;","  }","  if(typeof options.timeout === 'undefined' || options.timeout > 100000){","    options.timeout = 100000;","  }","  ","  var date = new Date();","  ","  var client = new twit(credentials);","  ","  var tweets = [];","  ","  var stream = client.stream('statuses/filter', {track: options.track});","  ","  var onEnd = function() {","    stream.stop();","    console.log('');","    console.log('> stopped stream after '+( (new Date()).getTime() - date.getTime() )+'ms - '+tweets.length+' tweets retrieved');","    if(tweets.length > 0){","    tweets = JSON.stringify(tweets);","      fs.writeFile(options.output,tweets,function(err,data){","        console.log('> writing retrieved tweets into file : '+options.output);","        if(err){","          console.log('> ! an error occured while writing tweets to file');","        }","        process.exit();","      });","    }","    else{","      console.log('> ! no tweets retrieved, not writing into file : '+options.output);","      process.exit();","    }","  };","  ","  stream.on('connect', function() {","    console.log('> connecting to twitter');","  });","  ","  stream.on('connected', function() {","    console.log('> connected to twitter - will disconnect in '+options.timeout+'ms or when '+options.maxNumber+' tweets are retrieved');","  });","","  stream.on('disconnect', function() {","    console.log('> disconnected from twitter - please retry');","  });","  ","  stream.on('tweet', function(tweet) {","    tweets.push(tweet);","    process.stdout.clearLine();  // clear current text","    process.stdout.cursorTo(0);  // move cursor to beginning of line","    process.stdout.write(tweets.length+' tweets retrieved');  // write text","    if(tweets.length >= options.maxNumber){","      onEnd();","    }","  });","","  setTimeout(function() {","    onEnd();","  }, options.timeout);","  ","};","","module.exports = MockDataRetriever;",""],"l":{"5":1,"6":1,"33":1,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"52":0,"53":0,"56":0,"58":0,"60":0,"62":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"75":0,"79":0,"80":0,"84":0,"85":0,"88":0,"89":0,"92":0,"93":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"106":0,"107":0,"112":1}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/debug.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/debug.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":20},"end":{"line":13,"column":30}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":22},"end":{"line":17,"column":32}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":33}}},"4":{"name":"(anonymous_4)","line":26,"loc":{"start":{"line":26,"column":11},"end":{"line":26,"column":21}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":67}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":60}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":106}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":14}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":38}},"8":{"start":{"line":17,"column":0},"end":{"line":19,"column":3}},"9":{"start":{"line":18,"column":2},"end":{"line":18,"column":29}},"10":{"start":{"line":21,"column":0},"end":{"line":24,"column":3}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":26}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":10}},"13":{"start":{"line":26,"column":0},"end":{"line":31,"column":9}},"14":{"start":{"line":27,"column":2},"end":{"line":27,"column":16}},"15":{"start":{"line":28,"column":2},"end":{"line":28,"column":34}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":105}},"17":{"start":{"line":30,"column":2},"end":{"line":30,"column":17}}},"branchMap":{},"code":["/*"," * The purpose of this file is to check if the Mockups behave correctly"," */","","var TwitterStreamChannels = require('../../main').getMockedClass();","var client = new TwitterStreamChannels({});","var inputTweetsMocks = require('../mocks/data/tweets.json');","","//var stream = client.streamChannels({track: \"whatever is in the json mock file\"});","var stream = client.getApiClient().stream('statuses/filter',{track: \"whatever is in the json mock file\"});","var count = 0;","","stream.on('connect',function(){","  console.log('> attempt connecting');","});","","stream.on('connected',function(){","  console.log('> connected');","});","","stream.on('tweet',function(tweet){","  console.log(tweet.text);","  count++;","});","","setTimeout(function(){","  stream.stop();","  console.log('> stopped stream');","  console.log('> retrieved '+count+' tweets / '+inputTweetsMocks.length+' tweets were send by the mock');","  process.exit();","},17000);"],"l":{"5":2,"6":0,"7":0,"10":0,"11":0,"13":0,"14":0,"17":0,"18":0,"21":0,"22":0,"23":0,"26":0,"27":0,"28":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/offline/stream.events-spec.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/offline/stream.events-spec.js","s":{"1":2,"2":2,"3":2,"4":2,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":61},"end":{"line":15,"column":71}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":13},"end":{"line":18,"column":24}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":32},"end":{"line":20,"column":44}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":31},"end":{"line":27,"column":41}}},"5":{"name":"(anonymous_5)","line":32,"loc":{"start":{"line":32,"column":15},"end":{"line":32,"column":25}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":11},"end":{"line":34,"column":21}}},"7":{"name":"(anonymous_7)","line":38,"loc":{"start":{"line":38,"column":29},"end":{"line":38,"column":44}}},"8":{"name":"(anonymous_8)","line":43,"loc":{"start":{"line":43,"column":15},"end":{"line":43,"column":25}}},"9":{"name":"(anonymous_9)","line":52,"loc":{"start":{"line":52,"column":78},"end":{"line":52,"column":88}}},"10":{"name":"(anonymous_10)","line":56,"loc":{"start":{"line":56,"column":51},"end":{"line":56,"column":61}}},"11":{"name":"(anonymous_11)","line":61,"loc":{"start":{"line":61,"column":54},"end":{"line":61,"column":64}}},"12":{"name":"(anonymous_12)","line":66,"loc":{"start":{"line":66,"column":51},"end":{"line":66,"column":61}}},"13":{"name":"(anonymous_13)","line":71,"loc":{"start":{"line":71,"column":54},"end":{"line":71,"column":64}}},"14":{"name":"(anonymous_14)","line":78,"loc":{"start":{"line":78,"column":38},"end":{"line":78,"column":48}}},"15":{"name":"(anonymous_15)","line":83,"loc":{"start":{"line":83,"column":15},"end":{"line":83,"column":25}}},"16":{"name":"(anonymous_16)","line":85,"loc":{"start":{"line":85,"column":11},"end":{"line":85,"column":21}}},"17":{"name":"(anonymous_17)","line":90,"loc":{"start":{"line":90,"column":36},"end":{"line":90,"column":51}}},"18":{"name":"(anonymous_18)","line":95,"loc":{"start":{"line":95,"column":15},"end":{"line":95,"column":25}}},"19":{"name":"(anonymous_19)","line":104,"loc":{"start":{"line":104,"column":78},"end":{"line":104,"column":88}}},"20":{"name":"(anonymous_20)","line":108,"loc":{"start":{"line":108,"column":51},"end":{"line":108,"column":61}}},"21":{"name":"(anonymous_21)","line":113,"loc":{"start":{"line":113,"column":54},"end":{"line":113,"column":64}}},"22":{"name":"(anonymous_22)","line":120,"loc":{"start":{"line":120,"column":38},"end":{"line":120,"column":48}}},"23":{"name":"(anonymous_23)","line":125,"loc":{"start":{"line":125,"column":15},"end":{"line":125,"column":25}}},"24":{"name":"(anonymous_24)","line":127,"loc":{"start":{"line":127,"column":11},"end":{"line":127,"column":21}}},"25":{"name":"(anonymous_25)","line":136,"loc":{"start":{"line":136,"column":36},"end":{"line":136,"column":51}}},"26":{"name":"(anonymous_26)","line":141,"loc":{"start":{"line":141,"column":15},"end":{"line":141,"column":25}}},"27":{"name":"(anonymous_27)","line":150,"loc":{"start":{"line":150,"column":78},"end":{"line":150,"column":88}}},"28":{"name":"(anonymous_28)","line":154,"loc":{"start":{"line":154,"column":51},"end":{"line":154,"column":61}}},"29":{"name":"(anonymous_29)","line":159,"loc":{"start":{"line":159,"column":54},"end":{"line":159,"column":64}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":67}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":15,"column":0},"end":{"line":168,"column":3}},"5":{"start":{"line":18,"column":2},"end":{"line":25,"column":5}},"6":{"start":{"line":19,"column":4},"end":{"line":23,"column":6}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":32}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":31}},"9":{"start":{"line":27,"column":2},"end":{"line":76,"column":5}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":22}},"11":{"start":{"line":30,"column":4},"end":{"line":30,"column":15}},"12":{"start":{"line":32,"column":4},"end":{"line":50,"column":7}},"13":{"start":{"line":34,"column":6},"end":{"line":41,"column":9}},"14":{"start":{"line":35,"column":8},"end":{"line":35,"column":27}},"15":{"start":{"line":36,"column":8},"end":{"line":36,"column":63}},"16":{"start":{"line":38,"column":8},"end":{"line":40,"column":11}},"17":{"start":{"line":39,"column":10},"end":{"line":39,"column":36}},"18":{"start":{"line":43,"column":6},"end":{"line":48,"column":47}},"19":{"start":{"line":44,"column":8},"end":{"line":47,"column":9}},"20":{"start":{"line":45,"column":10},"end":{"line":45,"column":24}},"21":{"start":{"line":46,"column":10},"end":{"line":46,"column":22}},"22":{"start":{"line":52,"column":4},"end":{"line":54,"column":7}},"23":{"start":{"line":53,"column":6},"end":{"line":53,"column":64}},"24":{"start":{"line":56,"column":4},"end":{"line":59,"column":7}},"25":{"start":{"line":57,"column":6},"end":{"line":57,"column":55}},"26":{"start":{"line":58,"column":6},"end":{"line":58,"column":55}},"27":{"start":{"line":61,"column":4},"end":{"line":64,"column":7}},"28":{"start":{"line":62,"column":6},"end":{"line":62,"column":70}},"29":{"start":{"line":63,"column":6},"end":{"line":63,"column":70}},"30":{"start":{"line":66,"column":4},"end":{"line":69,"column":7}},"31":{"start":{"line":67,"column":6},"end":{"line":67,"column":55}},"32":{"start":{"line":68,"column":6},"end":{"line":68,"column":55}},"33":{"start":{"line":71,"column":4},"end":{"line":74,"column":7}},"34":{"start":{"line":72,"column":6},"end":{"line":72,"column":60}},"35":{"start":{"line":73,"column":6},"end":{"line":73,"column":60}},"36":{"start":{"line":78,"column":2},"end":{"line":118,"column":5}},"37":{"start":{"line":80,"column":4},"end":{"line":80,"column":22}},"38":{"start":{"line":81,"column":4},"end":{"line":81,"column":15}},"39":{"start":{"line":83,"column":4},"end":{"line":102,"column":7}},"40":{"start":{"line":85,"column":6},"end":{"line":93,"column":9}},"41":{"start":{"line":87,"column":8},"end":{"line":87,"column":27}},"42":{"start":{"line":88,"column":8},"end":{"line":88,"column":63}},"43":{"start":{"line":90,"column":8},"end":{"line":92,"column":11}},"44":{"start":{"line":91,"column":10},"end":{"line":91,"column":36}},"45":{"start":{"line":95,"column":6},"end":{"line":100,"column":47}},"46":{"start":{"line":96,"column":8},"end":{"line":99,"column":9}},"47":{"start":{"line":97,"column":10},"end":{"line":97,"column":24}},"48":{"start":{"line":98,"column":10},"end":{"line":98,"column":22}},"49":{"start":{"line":104,"column":4},"end":{"line":106,"column":7}},"50":{"start":{"line":105,"column":6},"end":{"line":105,"column":64}},"51":{"start":{"line":108,"column":4},"end":{"line":111,"column":7}},"52":{"start":{"line":109,"column":6},"end":{"line":109,"column":55}},"53":{"start":{"line":110,"column":6},"end":{"line":110,"column":55}},"54":{"start":{"line":113,"column":4},"end":{"line":116,"column":7}},"55":{"start":{"line":114,"column":6},"end":{"line":114,"column":70}},"56":{"start":{"line":115,"column":6},"end":{"line":115,"column":70}},"57":{"start":{"line":120,"column":2},"end":{"line":166,"column":5}},"58":{"start":{"line":122,"column":4},"end":{"line":122,"column":22}},"59":{"start":{"line":123,"column":4},"end":{"line":123,"column":15}},"60":{"start":{"line":125,"column":4},"end":{"line":148,"column":7}},"61":{"start":{"line":127,"column":6},"end":{"line":139,"column":9}},"62":{"start":{"line":128,"column":8},"end":{"line":128,"column":27}},"63":{"start":{"line":129,"column":8},"end":{"line":134,"column":11}},"64":{"start":{"line":136,"column":8},"end":{"line":138,"column":11}},"65":{"start":{"line":137,"column":10},"end":{"line":137,"column":36}},"66":{"start":{"line":141,"column":6},"end":{"line":146,"column":47}},"67":{"start":{"line":142,"column":8},"end":{"line":145,"column":9}},"68":{"start":{"line":143,"column":10},"end":{"line":143,"column":24}},"69":{"start":{"line":144,"column":10},"end":{"line":144,"column":22}},"70":{"start":{"line":150,"column":4},"end":{"line":152,"column":7}},"71":{"start":{"line":151,"column":6},"end":{"line":151,"column":64}},"72":{"start":{"line":154,"column":4},"end":{"line":157,"column":7}},"73":{"start":{"line":155,"column":6},"end":{"line":155,"column":55}},"74":{"start":{"line":156,"column":6},"end":{"line":156,"column":55}},"75":{"start":{"line":159,"column":4},"end":{"line":164,"column":7}},"76":{"start":{"line":160,"column":6},"end":{"line":160,"column":71}},"77":{"start":{"line":161,"column":6},"end":{"line":161,"column":71}},"78":{"start":{"line":162,"column":6},"end":{"line":162,"column":71}},"79":{"start":{"line":163,"column":6},"end":{"line":163,"column":71}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"2":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"3":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]}},"code":["/* ","/*"," * This test is offline - no calls is made to Twitter either by oAuth nor by stream"," * (so you can run it as many times as you want)"," */","","var TwitterStreamChannels = require('../../main').getMockedClass();","var client = new TwitterStreamChannels({});","var channelsInput = {","  \"colors\": ['blue', 'white', 'yellow', 'green', 'orange'],","  \"fruits\": ['kiwi', 'orange,apple', 'lemon', 'coconut'],","  \"starWarsCharacters\": ['Luke', 'Leia', 'Han', 'Yoda']","};","","describe('client.streamChannels(options) - events (offline)',function(){","  ","  //specific matchers","  beforeEach(function() {","    var matchers = {","      toBeGreaterThanOrEqualTo: function(a) {","        return this.actual >= a;","      }","    };","    this.addMatchers(matchers);","  });","","  describe(\"> .on('channels')\",function(){","    ","    var trappedTweets;","    var stream;","  ","    beforeEach(function(){","      ","      runs(function(){","        trappedTweets = [];","        stream = client.streamChannels({track: channelsInput});","","        stream.on('channels',function(tweet){","          trappedTweets.push(tweet);","        });","      });","","      waitsFor(function(){","        if(trappedTweets.length >= 10){","          stream.stop();","          return true;","        }","      },\"should have trapped 10 tweets\",10000);","      ","    });","    ","    it('should have trapped at least 10 tweets via the callback on the event',function(){","      expect(trappedTweets.length).toBeGreaterThanOrEqualTo(10);","    });","    ","    it('should have trapped tweets with $channels',function(){","      expect(trappedTweets[0].$channels).toBeDefined();","      expect(trappedTweets[9].$channels).toBeDefined();","    });","    ","    it('$channels should have correct keywords in it',function(){","      expect(trappedTweets[0].$channels['colors']).toEqual(['green']);","      expect(trappedTweets[9].$channels['fruits']).toEqual(['apple']);","    });","    ","    it('should have trapped tweets with $keywords',function(){","      expect(trappedTweets[0].$keywords).toBeDefined();","      expect(trappedTweets[9].$keywords).toBeDefined();","    });","    ","    it('$keywords should have correct keywords in it',function(){","      expect(trappedTweets[0].$keywords).toEqual(['green']);","      expect(trappedTweets[9].$keywords).toEqual(['apple']);","    });","    ","  });","","  describe(\"> .on('channels/fruits')\",function(){","    ","    var trappedTweets;","    var stream;","  ","    beforeEach(function(){","      ","      runs(function(){","        //no need to reinstantiate the stream for each \"it\", only the first (they all use the same tests results)","        trappedTweets = [];","        stream = client.streamChannels({track: channelsInput});","","        stream.on('channels/fruits',function(tweet){","          trappedTweets.push(tweet);","        });","      });","","      waitsFor(function(){","        if(trappedTweets.length >= 10){","          stream.stop();","          return true;","        }","      },\"should have trapped 10 tweets\",10000);","      ","    });","    ","    it('should have trapped at least 10 tweets via the callback on the event',function(){","      expect(trappedTweets.length).toBeGreaterThanOrEqualTo(10);","    });","    ","    it('should have trapped tweets with $channels',function(){","      expect(trappedTweets[0].$channels).toBeDefined();","      expect(trappedTweets[9].$channels).toBeDefined();","    });","    ","    it('$channels should have correct keywords in it',function(){","      expect(trappedTweets[0].$channels['fruits']).toEqual(['apple']);","      expect(trappedTweets[9].$channels['fruits']).toEqual(['apple']);","    });","    ","  });","","  describe(\"> .on('keywords/orange')\",function(){","    ","    var trappedTweets;","    var stream;","  ","    beforeEach(function(){","      ","      runs(function(){","        trappedTweets = [];","        stream = client.streamChannels({","          track: channelsInput,","          enableChannelsEvents:false,","          enableRootChannelsEvent:false,","          enableKeywordsEvents:true","        });","","        stream.on('keywords/orange',function(tweet){","          trappedTweets.push(tweet);","        });","      });","","      waitsFor(function(){","        if(trappedTweets.length >= 10){","          stream.stop();","          return true;","        }","      },\"should have trapped 10 tweets\",10000);","      ","    });","    ","    it('should have trapped at least 10 tweets via the callback on the event',function(){","      expect(trappedTweets.length).toBeGreaterThanOrEqualTo(10);","    });","    ","    it('should have trapped tweets with $channels',function(){","      expect(trappedTweets[0].$channels).toBeDefined();","      expect(trappedTweets[9].$channels).toBeDefined();","    });","    ","    it('$channels should have correct keywords in it',function(){","      expect(trappedTweets[0].$channels['colors']).toEqual(['orange']);","      expect(trappedTweets[9].$channels['colors']).toEqual(['orange']);","      expect(trappedTweets[0].$channels['fruits']).toEqual(['orange']);","      expect(trappedTweets[9].$channels['fruits']).toEqual(['orange']);","    });","    ","  });","  ","});"],"l":{"7":2,"8":2,"9":2,"15":2,"18":0,"19":0,"21":0,"24":0,"27":0,"29":0,"30":0,"32":0,"34":0,"35":0,"36":0,"38":0,"39":0,"43":0,"44":0,"45":0,"46":0,"52":0,"53":0,"56":0,"57":0,"58":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"71":0,"72":0,"73":0,"78":0,"80":0,"81":0,"83":0,"85":0,"87":0,"88":0,"90":0,"91":0,"95":0,"96":0,"97":0,"98":0,"104":0,"105":0,"108":0,"109":0,"110":0,"113":0,"114":0,"115":0,"120":0,"122":0,"123":0,"125":0,"127":0,"128":0,"129":0,"136":0,"137":0,"141":0,"142":0,"143":0,"144":0,"150":0,"151":0,"154":0,"155":0,"156":0,"159":0,"160":0,"161":0,"162":0,"163":0}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/mocks/TwitterStreamChannels.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/mocks/TwitterStreamChannels.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":1,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":1,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":4,"62":1,"63":0,"64":1,"65":0,"66":1},"b":{"1":[0,1],"2":[0,1],"3":[0,4],"4":[4,0],"5":[4,0],"6":[4,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":1,"2":4,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":4,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":26}}},"2":{"name":"(anonymous_2)","line":36,"loc":{"start":{"line":36,"column":15},"end":{"line":36,"column":36}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":28},"end":{"line":50,"column":50}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":21},"end":{"line":69,"column":38}}},"5":{"name":"(anonymous_5)","line":81,"loc":{"start":{"line":81,"column":15},"end":{"line":81,"column":25}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":22},"end":{"line":91,"column":32}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":15},"end":{"line":93,"column":25}}},"8":{"name":"(anonymous_8)","line":118,"loc":{"start":{"line":118,"column":13},"end":{"line":118,"column":23}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":13},"end":{"line":121,"column":23}}},"10":{"name":"(anonymous_10)","line":124,"loc":{"start":{"line":124,"column":13},"end":{"line":124,"column":23}}},"11":{"name":"(anonymous_11)","line":131,"loc":{"start":{"line":131,"column":14},"end":{"line":131,"column":24}}},"12":{"name":"(anonymous_12)","line":136,"loc":{"start":{"line":136,"column":28},"end":{"line":136,"column":38}}},"13":{"name":"(anonymous_13)","line":158,"loc":{"start":{"line":158,"column":32},"end":{"line":158,"column":53}}},"14":{"name":"(anonymous_14)","line":167,"loc":{"start":{"line":167,"column":51},"end":{"line":167,"column":61}}},"15":{"name":"(anonymous_15)","line":183,"loc":{"start":{"line":183,"column":53},"end":{"line":183,"column":70}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":23}},"4":{"start":{"line":15,"column":0},"end":{"line":16,"column":31}},"5":{"start":{"line":19,"column":0},"end":{"line":26,"column":5}},"6":{"start":{"line":20,"column":2},"end":{"line":25,"column":3}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":28}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":22}},"9":{"start":{"line":36,"column":0},"end":{"line":45,"column":2}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":70}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":118}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":102}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":104}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":40}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":42}},"16":{"start":{"line":44,"column":2},"end":{"line":44,"column":44}},"17":{"start":{"line":50,"column":0},"end":{"line":56,"column":2}},"18":{"start":{"line":51,"column":2},"end":{"line":55,"column":14}},"19":{"start":{"line":69,"column":0},"end":{"line":142,"column":2}},"20":{"start":{"line":71,"column":2},"end":{"line":71,"column":58}},"21":{"start":{"line":72,"column":2},"end":{"line":72,"column":106}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":90}},"23":{"start":{"line":74,"column":2},"end":{"line":74,"column":92}},"24":{"start":{"line":76,"column":2},"end":{"line":76,"column":29}},"25":{"start":{"line":78,"column":2},"end":{"line":78,"column":26}},"26":{"start":{"line":81,"column":2},"end":{"line":129,"column":4}},"27":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"28":{"start":{"line":85,"column":6},"end":{"line":85,"column":18}},"29":{"start":{"line":88,"column":4},"end":{"line":88,"column":20}},"30":{"start":{"line":89,"column":4},"end":{"line":89,"column":26}},"31":{"start":{"line":91,"column":4},"end":{"line":116,"column":6}},"32":{"start":{"line":92,"column":6},"end":{"line":92,"column":22}},"33":{"start":{"line":93,"column":6},"end":{"line":115,"column":30}},"34":{"start":{"line":95,"column":8},"end":{"line":114,"column":9}},"35":{"start":{"line":97,"column":10},"end":{"line":101,"column":11}},"36":{"start":{"line":98,"column":12},"end":{"line":98,"column":83}},"37":{"start":{"line":99,"column":12},"end":{"line":99,"column":70}},"38":{"start":{"line":100,"column":12},"end":{"line":100,"column":37}},"39":{"start":{"line":103,"column":10},"end":{"line":112,"column":11}},"40":{"start":{"line":105,"column":12},"end":{"line":111,"column":13}},"41":{"start":{"line":106,"column":14},"end":{"line":106,"column":41}},"42":{"start":{"line":109,"column":14},"end":{"line":109,"column":40}},"43":{"start":{"line":110,"column":14},"end":{"line":110,"column":27}},"44":{"start":{"line":113,"column":10},"end":{"line":113,"column":33}},"45":{"start":{"line":118,"column":4},"end":{"line":120,"column":9}},"46":{"start":{"line":119,"column":6},"end":{"line":119,"column":27}},"47":{"start":{"line":121,"column":4},"end":{"line":123,"column":28}},"48":{"start":{"line":122,"column":6},"end":{"line":122,"column":29}},"49":{"start":{"line":124,"column":4},"end":{"line":126,"column":28}},"50":{"start":{"line":125,"column":6},"end":{"line":125,"column":29}},"51":{"start":{"line":128,"column":4},"end":{"line":128,"column":16}},"52":{"start":{"line":131,"column":2},"end":{"line":134,"column":4}},"53":{"start":{"line":132,"column":4},"end":{"line":132,"column":35}},"54":{"start":{"line":133,"column":4},"end":{"line":133,"column":16}},"55":{"start":{"line":136,"column":2},"end":{"line":140,"column":4}},"56":{"start":{"line":137,"column":4},"end":{"line":137,"column":31}},"57":{"start":{"line":138,"column":4},"end":{"line":138,"column":28}},"58":{"start":{"line":139,"column":4},"end":{"line":139,"column":16}},"59":{"start":{"line":144,"column":0},"end":{"line":144,"column":44}},"60":{"start":{"line":158,"column":0},"end":{"line":160,"column":2}},"61":{"start":{"line":159,"column":2},"end":{"line":159,"column":45}},"62":{"start":{"line":167,"column":0},"end":{"line":169,"column":2}},"63":{"start":{"line":168,"column":2},"end":{"line":168,"column":24}},"64":{"start":{"line":183,"column":0},"end":{"line":185,"column":2}},"65":{"start":{"line":184,"column":2},"end":{"line":184,"column":53}},"66":{"start":{"line":187,"column":0},"end":{"line":187,"column":43}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":40},"end":{"line":11,"column":44}},{"start":{"line":11,"column":47},"end":{"line":11,"column":52}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"3":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":53},"end":{"line":38,"column":55}},{"start":{"line":38,"column":58},"end":{"line":38,"column":69}}]},"4":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":67},"end":{"line":39,"column":96}},{"start":{"line":39,"column":99},"end":{"line":39,"column":117}}]},"5":{"line":40,"type":"cond-expr","locations":[{"start":{"line":40,"column":73},"end":{"line":40,"column":77}},{"start":{"line":40,"column":80},"end":{"line":40,"column":101}}]},"6":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":75},"end":{"line":41,"column":78}},{"start":{"line":41,"column":81},"end":{"line":41,"column":103}}]},"7":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":45},"end":{"line":71,"column":47}},{"start":{"line":71,"column":50},"end":{"line":71,"column":57}}]},"8":{"line":72,"type":"cond-expr","locations":[{"start":{"line":72,"column":59},"end":{"line":72,"column":88}},{"start":{"line":72,"column":91},"end":{"line":72,"column":105}}]},"9":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":65},"end":{"line":73,"column":69}},{"start":{"line":73,"column":72},"end":{"line":73,"column":89}}]},"10":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":67},"end":{"line":74,"column":70}},{"start":{"line":74,"column":73},"end":{"line":74,"column":91}}]},"11":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"12":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"13":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":10},"end":{"line":97,"column":10}},{"start":{"line":97,"column":10},"end":{"line":97,"column":10}}]},"14":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":10},"end":{"line":103,"column":10}},{"start":{"line":103,"column":10},"end":{"line":103,"column":10}}]},"15":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]}},"code":["/**"," * @module twitter-stream-channels"," */","","/*"," * This is a very simple mock of TwitterStreamChannels for offline test purposes"," * To test only the init of the StreamChannels object (before any call to twitter)"," */","","//in unitTest, we pass a flag --config highSpeed true and then the events will be emitted really faster (not using setTimeout but process.nextTick)","var highSpeed = process.env.highSpeed ? true : false;","","var StreamChannels = require('../lib/StreamChannels');","var fs = require('fs');","var EventEmitter = require('events').EventEmitter,","        util = require('util');","","//optimization for the unit-tests","var nextLoop = (function(){","  if(highSpeed === true){","    return process.nextTick;","  }","  else{","    return setTimeout;","  }","})();","","/*"," * Mock for the twitter api client twit"," * No oAuth request will be made"," * @param {Object} [credentials] @optional (since it's a mock, no credentials needed"," * @param {Array} [credentials.tweets] @optional (by default will load `/mocks/data/tweets.json`)"," * @param {Boolean} [credentials.singleRun=true] @optional if false will loop on the tweets mock array until you call stop (default true)"," * @param {Number} [credentials.tweetDelay=100] @optional delay between each tweets emitted in ms (default 100ms)"," */","var TwitMock = function(credentials){","  //this is internal to the mock to give option to the dev to change the tweet mocks","  credentials = typeof credentials === 'undefined' ? {} : credentials;","  credentials.tweets = typeof credentials.tweets === 'undefined' ? require('./data/tweets.json') : credentials.tweets;","  credentials.singleRun = typeof credentials.singleRun === 'undefined' ? true : credentials.singleRun;","  credentials.tweetDelay = typeof credentials.tweetDelay === 'undefined' ? 100 : credentials.tweetDelay;","  this._tweetsMock = credentials.tweets;","  this._singleRun = credentials.singleRun;","  this._tweetDelay = credentials.tweetDelay;","};","","/*"," * Mocking .stream with an empty function so that no call will be made"," */","TwitMock.prototype.stream = function(path, params){","  return (new TwitStreamMock({","    tweets:this._tweetsMock,","    singleRun: this._singleRun,","    tweetDelay: this._tweetDelay","  })).start();","};","","/*"," * Mock for the OAuth / stream part (no need to mock all the underlying methods, only the events part)"," * Emits :"," * - connect"," * - connected"," * - tweet : will read the inputTweetsMocks file and emit the tweet found inside"," * @param {Object} [options] @optional (since it's a mock, no credentials needed"," * @param {File} [options.tweets] @optional (by default will load `/mocks/data/tweets.json`)"," * @param {Boolean} [options.singleRun=true] @optional if false will loop on the tweets mock array until you call stop (default true)"," * @param {Number} [options.tweetDelay=100] @optional delay between each tweets emitted in ms (default 100ms)"," */","var TwitStreamMock = function(options){","  ","  options = typeof options === 'undefined' ? {} : options;","  options.tweets = typeof options.tweets === 'undefined' ? require('./data/tweets.json') : options.tweets;","  options.singleRun = typeof options.singleRun === 'undefined' ? true : options.singleRun;","  options.tweetDelay = typeof options.tweetDelay === 'undefined' ? 100 : options.tweetDelay;","  ","  this.currentTweetIndex = 0;","","  EventEmitter.call(this);","  ","  //following method are directly attached (on the prototype, they would be erased by EventEmitter's prototype)","  this.start = function(){","    ","    //don't do anything if already connected","    if(this.abortedBy === null){","      return this;","    }","    ","    var that = this;","    this.abortedBy = null;","  ","    var emitTweetCb = function(){","      var that = this;","      nextLoop(function(){","        //only send tweet if the stream hasn't been stopped","        if(that.abortedBy === null){","          //emit the tweet","          if(options.tweets[that.currentTweetIndex]){","            options.tweets[that.currentTweetIndex].$index = that.currentTweetIndex;","            that.emit('tweet',options.tweets[that.currentTweetIndex]);","            that.currentTweetIndex++;","          }","          //case we are at the end of the tweets","          if(that.currentTweetIndex >= options.tweets.length){","            //in singleRun restart from 0","            if(options.singleRun === false){","              that.currentTweetIndex = 0;","            }","            else{","              that._twitterDisconnect();","              return false;//dont recall the callback for the next tick","            }","          }","          emitTweetCb.call(that);","        }","      },1*options.tweetDelay);","    };","    ","    nextLoop(function(){","      that.emit('connect');","    },0);","    nextLoop(function(){","      that.emit('connected');","    },1*options.tweetDelay);","    nextLoop(function(){","      emitTweetCb.call(that);","    },2*options.tweetDelay);","    ","    return this;","  };","  ","  this.stop = function(){","    this.abortedBy = 'twit-client';","    return this;","  };","  ","  this._twitterDisconnect = function(){","    this.abortedBy = 'twitter';","    this.emit('disconnect');","    return this;","  };","  ","};","","util.inherits(TwitStreamMock, EventEmitter);","","/**"," * This class mocks {{#crossLink \"TwitterStreamChannels\"}}TwitterStreamChannels{{/crossLink}} so that you could work offline, on your own data, without connecting to Twitter."," * "," * See the examples on [the github repo](https://github.com/topheman/twitter-stream-channels/tree/master/examples)"," * @class TwitterStreamChannelsMock"," * @constructor"," * @param {Object} [options] @optional (since it's a mock, no credentials needed"," * @param {File} [options.tweets] @optional (by default will load `/mocks/data/tweets.json`)"," * @param {Boolean} [options.singleRun=true] @optional if false will loop on the tweets mock array until you call stop (default true)"," * @param {Number} [options.tweetDelay=100] @optional delay between each tweets emitted in ms (default 100ms)"," * @returns {TwitterStreamChannelsMock}"," */","var TwitterStreamChannelsMock = function(credentials){","  this.apiClient = new TwitMock(credentials);","};","","/**"," * Returns a mocked version of apiClient, only the .stream() method is mocked (will stream exactly the same tweets as {{#crossLink \"TwitterStreamChannelsMock/streamChannels\"}}stream.streamChannels(){{/crossLink}})"," * @method getApiClient"," * @returns {TwitMock}"," */","TwitterStreamChannelsMock.prototype.getApiClient = function(){","  return this.apiClient;","};","","/**"," * Mocks the {{#crossLink \"TwitterStreamChannels/streamChannels\"}}TwitterStreamChannels.streamChannels(options){{/crossLink}} method of TwitterStreamChannels to return a StreamChannels object"," * "," * Will start to emit the tweets you specified in the tweets attributes in the constructor."," * @method streamChannels"," * @param {Object} options"," * @param {Object|Array} options.track Pass an object describing your channels. If you don't want to use channels, you can pass directly an array of keywords."," * @param {Boolean} [options.enableChannelsEvents=true] If true, will fire the events like 'channels/channelName'"," * @param {Boolean} [options.enableRootChannelsEvent=true] If true, will fire the event 'channels'"," * @param {Boolean} [options.enableKeywordsEvents=false] If true, will fire the events 'keywords/keywordName' (disabled by default)"," * @return {StreamChannels}"," */","TwitterStreamChannelsMock.prototype.streamChannels = function(options){","  return new StreamChannels(this.apiClient, options);","};","","module.exports = TwitterStreamChannelsMock;"],"l":{"11":1,"13":1,"14":1,"15":1,"19":1,"20":1,"21":0,"24":1,"36":1,"38":4,"39":4,"40":4,"41":4,"42":4,"43":4,"44":4,"50":1,"51":0,"69":1,"71":0,"72":0,"73":0,"74":0,"76":0,"78":0,"81":0,"84":0,"85":0,"88":0,"89":0,"91":0,"92":0,"93":0,"95":0,"97":0,"98":0,"99":0,"100":0,"103":0,"105":0,"106":0,"109":0,"110":0,"113":0,"118":0,"119":0,"121":0,"122":0,"124":0,"125":0,"128":0,"131":0,"132":0,"133":0,"136":0,"137":0,"138":0,"139":0,"144":1,"158":1,"159":4,"167":1,"168":0,"183":1,"184":0,"187":1}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/offline/stream.init-spec.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/offline/stream.init-spec.js","s":{"1":2,"2":2,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":60},"end":{"line":9,"column":71}}},"2":{"name":"(anonymous_2)","line":11,"loc":{"start":{"line":11,"column":55},"end":{"line":11,"column":66}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":72},"end":{"line":13,"column":83}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":66},"end":{"line":27,"column":77}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":97},"end":{"line":41,"column":108}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":71},"end":{"line":55,"column":82}}},"7":{"name":"(anonymous_7)","line":71,"loc":{"start":{"line":71,"column":36},"end":{"line":71,"column":47}}},"8":{"name":"(anonymous_8)","line":107,"loc":{"start":{"line":107,"column":57},"end":{"line":107,"column":68}}},"9":{"name":"(anonymous_9)","line":114,"loc":{"start":{"line":114,"column":56},"end":{"line":114,"column":67}}},"10":{"name":"(anonymous_10)","line":121,"loc":{"start":{"line":121,"column":59},"end":{"line":121,"column":70}}},"11":{"name":"(anonymous_11)","line":128,"loc":{"start":{"line":128,"column":57},"end":{"line":128,"column":68}}},"12":{"name":"(anonymous_12)","line":135,"loc":{"start":{"line":135,"column":79},"end":{"line":135,"column":90}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":67}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":147,"column":3}},"4":{"start":{"line":11,"column":2},"end":{"line":69,"column":5}},"5":{"start":{"line":13,"column":4},"end":{"line":25,"column":7}},"6":{"start":{"line":14,"column":6},"end":{"line":14,"column":23}},"7":{"start":{"line":15,"column":6},"end":{"line":24,"column":7}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":45}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":22}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":26}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":37}},"12":{"start":{"line":27,"column":4},"end":{"line":39,"column":7}},"13":{"start":{"line":28,"column":6},"end":{"line":28,"column":23}},"14":{"start":{"line":29,"column":6},"end":{"line":38,"column":7}},"15":{"start":{"line":30,"column":8},"end":{"line":30,"column":47}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":22}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":26}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":37}},"19":{"start":{"line":41,"column":4},"end":{"line":53,"column":7}},"20":{"start":{"line":42,"column":6},"end":{"line":42,"column":23}},"21":{"start":{"line":43,"column":6},"end":{"line":52,"column":7}},"22":{"start":{"line":44,"column":8},"end":{"line":44,"column":56}},"23":{"start":{"line":45,"column":8},"end":{"line":45,"column":22}},"24":{"start":{"line":48,"column":8},"end":{"line":48,"column":26}},"25":{"start":{"line":51,"column":8},"end":{"line":51,"column":37}},"26":{"start":{"line":55,"column":4},"end":{"line":67,"column":7}},"27":{"start":{"line":56,"column":6},"end":{"line":56,"column":23}},"28":{"start":{"line":57,"column":6},"end":{"line":66,"column":7}},"29":{"start":{"line":58,"column":8},"end":{"line":58,"column":64}},"30":{"start":{"line":59,"column":8},"end":{"line":59,"column":22}},"31":{"start":{"line":62,"column":8},"end":{"line":62,"column":26}},"32":{"start":{"line":65,"column":8},"end":{"line":65,"column":33}},"33":{"start":{"line":71,"column":2},"end":{"line":145,"column":5}},"34":{"start":{"line":73,"column":4},"end":{"line":73,"column":62}},"35":{"start":{"line":74,"column":4},"end":{"line":74,"column":72}},"36":{"start":{"line":75,"column":4},"end":{"line":75,"column":76}},"37":{"start":{"line":76,"column":4},"end":{"line":80,"column":6}},"38":{"start":{"line":81,"column":4},"end":{"line":85,"column":6}},"39":{"start":{"line":86,"column":4},"end":{"line":90,"column":6}},"40":{"start":{"line":91,"column":4},"end":{"line":105,"column":6}},"41":{"start":{"line":107,"column":4},"end":{"line":112,"column":7}},"42":{"start":{"line":108,"column":6},"end":{"line":108,"column":70}},"43":{"start":{"line":109,"column":6},"end":{"line":109,"column":20}},"44":{"start":{"line":110,"column":6},"end":{"line":110,"column":57}},"45":{"start":{"line":111,"column":6},"end":{"line":111,"column":71}},"46":{"start":{"line":114,"column":4},"end":{"line":119,"column":7}},"47":{"start":{"line":115,"column":6},"end":{"line":115,"column":69}},"48":{"start":{"line":116,"column":6},"end":{"line":116,"column":20}},"49":{"start":{"line":117,"column":6},"end":{"line":117,"column":57}},"50":{"start":{"line":118,"column":6},"end":{"line":118,"column":71}},"51":{"start":{"line":121,"column":4},"end":{"line":126,"column":7}},"52":{"start":{"line":122,"column":6},"end":{"line":122,"column":65}},"53":{"start":{"line":123,"column":6},"end":{"line":123,"column":20}},"54":{"start":{"line":124,"column":6},"end":{"line":124,"column":49}},"55":{"start":{"line":125,"column":6},"end":{"line":125,"column":58}},"56":{"start":{"line":128,"column":4},"end":{"line":133,"column":7}},"57":{"start":{"line":129,"column":6},"end":{"line":129,"column":65}},"58":{"start":{"line":130,"column":6},"end":{"line":130,"column":20}},"59":{"start":{"line":131,"column":6},"end":{"line":131,"column":56}},"60":{"start":{"line":132,"column":6},"end":{"line":132,"column":73}},"61":{"start":{"line":135,"column":4},"end":{"line":143,"column":7}},"62":{"start":{"line":136,"column":6},"end":{"line":136,"column":65}},"63":{"start":{"line":137,"column":6},"end":{"line":137,"column":20}},"64":{"start":{"line":138,"column":6},"end":{"line":138,"column":73}},"65":{"start":{"line":139,"column":6},"end":{"line":139,"column":98}},"66":{"start":{"line":140,"column":6},"end":{"line":140,"column":144}},"67":{"start":{"line":141,"column":6},"end":{"line":141,"column":148}},"68":{"start":{"line":142,"column":6},"end":{"line":142,"column":158}}},"branchMap":{},"code":["/*"," * This test is offline - no calls is made to Twitter either by oAuth nor by stream"," * (so you can run it as many times as you want)"," */","","var TwitterStreamChannels = require('../../main').getMockedClass();","var client = new TwitterStreamChannels({});","","describe('client.streamChannels(options) - init (offline)', function() {","","  describe('> options checking (exceptions handling)', function() {","","    it('should throw exceptions when passing no parameters in options', function() {","      var error = null;","      try {","        var stream = client.streamChannels();","        stream.stop();","      }","      catch (e) {","        error = e.message;","      }","      finally {","        expect(error).not.toBeNull();","      }","    });","","    it('should throw exceptions when track parameter is missing', function() {","      var error = null;","      try {","        var stream = client.streamChannels({});","        stream.stop();","      }","      catch (e) {","        error = e.message;","      }","      finally {","        expect(error).not.toBeNull();","      }","    });","","    it('should throw exceptions when track parameter is not an object(or an array) or a string', function() {","      var error = null;","      try {","        var stream = client.streamChannels({track: 12});","        stream.stop();","      }","      catch (e) {","        error = e.message;","      }","      finally {","        expect(error).not.toBeNull();","      }","    });","","    it('should NOT throw exceptions when track parameter is a string', function() {","      var error = null;","      try {","        var stream = client.streamChannels({track: \"whatever\"});","        stream.stop();","      }","      catch (e) {","        error = e.message;","      }","      finally {","        expect(error).toBeNull();","      }","    });","","  });","","  describe('> options reformating', function() {","","    var stringFiltersInput = \"blue,white,yellow,green,orange\";","    var arrayFiltersInput = ['blue,white', 'yellow', 'green', 'orange'];","    var arrayFiltersOutput = ['blue', 'white', 'yellow', 'green', 'orange'];","    var channelsInput = {","      \"colors\": stringFiltersInput,","      \"fruits\": ['kiwi', 'orange,apple', 'lemon', 'coconut'],","      \"starWarsCharacters\": ['Luke', 'Leia,Han', 'Yoda']","    };","    var channelsOuput = {","      \"colors\": arrayFiltersOutput,","      \"fruits\": ['kiwi', 'orange', 'apple', 'lemon', 'coconut'],","      \"starWarsCharacters\": ['Luke', 'Leia', 'Han', 'Yoda']","    };","    var channelsKeywordsLowerCasedOuput = {","      \"colors\": arrayFiltersOutput,","      \"fruits\": ['kiwi', 'orange', 'apple', 'lemon', 'coconut'],","      \"starWarsCharacters\": ['luke', 'leia', 'han', 'yoda']","    };","    var trackedKeywordsOutput = [","      'blue',","      'white',","      'yellow',","      'green',","      'orange',","      'kiwi',","      'apple',","      'lemon',","      'coconut',","      'Luke',","      'Leia',","      'Han',","      'Yoda'","    ];","","    it('should take a direct string in track parameter', function() {","      var stream = client.streamChannels({track: stringFiltersInput});","      stream.stop();","      expect(stream.getChannels().default).toBeDefined();","      expect(stream.getChannels().default).toEqual(arrayFiltersOutput);","    });","","    it('should take a direct array in track parameter', function() {","      var stream = client.streamChannels({track: arrayFiltersInput});","      stream.stop();","      expect(stream.getChannels().default).toBeDefined();","      expect(stream.getChannels().default).toEqual(arrayFiltersOutput);","    });","","    it('should take a channels object in track parameter', function() {","      var stream = client.streamChannels({track: channelsInput});","      stream.stop();","      expect(stream.getChannels()).toBeDefined();","      expect(stream.getChannels()).toEqual(channelsOuput);","    });","","    it('should not have duplicates in tracked keywords', function() {","      var stream = client.streamChannels({track: channelsInput});","      stream.stop();","      expect(stream.getTrackedKeywords()).toBeDefined();","      expect(stream.getTrackedKeywords()).toEqual(trackedKeywordsOutput);","    });","","    it('should have a regexp version of the channels - working in lower case', function() {","      var stream = client.streamChannels({track: channelsInput});","      stream.stop();","      expect(stream.getChannelsKeywordsLowerCasedRegExp()).toBeDefined();","      expect(stream.getChannelsKeywordsLowerCasedRegExp()['colors'] instanceof RegExp).toBe(true);","      expect('this is blue and also white but not red'.match(stream.getChannelsKeywordsLowerCasedRegExp()['colors'])).toEqual(['blue','white']);","      expect('you may like lemon and orange, in juice ?'.match(stream.getChannelsKeywordsLowerCasedRegExp()['fruits'])).toEqual(['lemon','orange']);","      expect('Some would say that yoda is wiser than Luke'.match(stream.getChannelsKeywordsLowerCasedRegExp()['starWarsCharacters'])).toEqual(['yoda','han']);","    });","","  });","","});"],"l":{"6":2,"7":2,"9":2,"11":0,"13":0,"14":0,"15":0,"16":0,"17":0,"20":0,"23":0,"27":0,"28":0,"29":0,"30":0,"31":0,"34":0,"37":0,"41":0,"42":0,"43":0,"44":0,"45":0,"48":0,"51":0,"55":0,"56":0,"57":0,"58":0,"59":0,"62":0,"65":0,"71":0,"73":0,"74":0,"75":0,"76":0,"81":0,"86":0,"91":0,"107":0,"108":0,"109":0,"110":0,"111":0,"114":0,"115":0,"116":0,"117":0,"118":0,"121":0,"122":0,"123":0,"124":0,"125":0,"128":0,"129":0,"130":0,"131":0,"132":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0}},"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/online/dummy-spec.js":{"path":"/home/travis/build/npmtest/node-npmtest-twitter-stream-channels/node_modules/twitter-stream-channels/spec/online/dummy-spec.js","s":{"1":2},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":109},"end":{"line":8,"column":119}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":10,"column":3}}},"branchMap":{},"code":["/*"," * This is where you could put online unit tests"," * For the moment, there aren't any because I've tested all what I wanted with offline version with the mocks"," * "," * I'm not so sure there should be any online unit-tests (this should be some other kind of tests)"," */","","describe(\"No online tests for the moment, not so sure there should be any or that they should be unit-tests\",function(){","  ","});"],"l":{"8":2}}}